{"version":3,"sources":["Tabs.tsx","App.tsx","index.tsx"],"names":["Tabs","tabs","selectedTab","onTabSelected","className","map","tab","type","classnames","onClick","changeTab","title","id","content","App","useState","setSelectedTab","split","ReactDOM","render","document","getElementById"],"mappings":"iOAgBaA,EAAwB,SAAC,GAA0C,IAAxCC,EAAuC,EAAvCA,KAAMC,EAAiC,EAAjCA,YAAaC,EAAoB,EAApBA,cAOzD,OACE,qCACE,qBAAKC,UAAU,gCAAf,SACGH,EAAKI,KAAI,SAAAC,GAAG,OACX,wBAEEC,KAAK,SACLH,UAAWI,IAAW,oBAAqB,CACzC,oBAAqBN,IAAgBI,IAEvCG,QAAS,kBAhBD,SAACH,GACbJ,IAAgBI,GAClBH,EAAcG,GAcOI,CAAUJ,IAN3B,SAQGA,EAAIK,OAPAL,EAAIM,SAWf,qBAAKR,UAAU,8BAAf,SACE,mBAAGA,UAAU,UAAU,UAAQ,cAA/B,SACGF,EAAYW,gBCpCVZ,EAAc,CACzB,CAAEW,GAAI,QAASD,MAAO,QAASE,QAAS,eACxC,CAAED,GAAI,QAASD,MAAO,QAASE,QAAS,eACxC,CAAED,GAAI,QAASD,MAAO,QAASE,QAAS,gBAqB3BC,EAlBO,WACpB,MAAsCC,mBAASd,EAAK,IAApD,mBAAOC,EAAP,KAAoBc,EAApB,KAEA,OACE,sBAAKZ,UAAU,oBAAf,UACE,qBAAIA,UAAU,QAAd,gCAEGF,EAAYU,GAAGK,MAAM,KAAK,MAE7B,cAAC,EAAD,CACEhB,KAAMA,EACNC,YAAaA,EACbC,cAAea,QCpBvBE,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.0d56870d.chunk.js","sourcesContent":["import React from 'react';\nimport './Tabs.scss';\nimport classnames from 'classnames';\n\ntype Tab = {\n  id: string,\n  title: string,\n  content: string,\n};\n\ntype Props = {\n  tabs: Tab[],\n  selectedTab: Tab,\n  onTabSelected: (selectedTab: Tab) => void,\n};\n\nexport const Tabs: React.FC<Props> = ({ tabs, selectedTab, onTabSelected }) => {\n  const changeTab = (tab: Tab) => {\n    if (selectedTab !== tab) {\n      onTabSelected(tab);\n    }\n  };\n\n  return (\n    <>\n      <div className=\"buttons is-centered container\">\n        {tabs.map(tab => (\n          <button\n            key={tab.id}\n            type=\"button\"\n            className={classnames('button is-rounded', {\n              'button__is-active': selectedTab === tab,\n            })}\n            onClick={() => changeTab(tab)}\n          >\n            {tab.title}\n          </button>\n        ))}\n      </div>\n      <div className=\"container container-content\">\n        <p className=\"content\" data-cy=\"tab-content\">\n          {selectedTab.content}\n        </p>\n      </div>\n    </>\n  );\n};\n","import React, { useState } from 'react';\n\nimport './App.scss';\nimport { Tabs } from './Tabs';\n\nexport const tabs: Tab[] = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nconst App: React.FC = () => {\n  const [selectedTab, setSelectedTab] = useState(tabs[0]);\n\n  return (\n    <div className=\"has-text-centered\">\n      <h1 className=\"title\">\n        Selected tab is&nbsp;\n        {selectedTab.id.split('-')[1]}\n      </h1>\n      <Tabs\n        tabs={tabs}\n        selectedTab={selectedTab}\n        onTabSelected={setSelectedTab}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}